service: indexer-server

provider:
  name: aws
  runtime: python3.8
  memorySize: 1024 # 1024 MB
  timeout: 10
  region: eu-central-1
  endpointType: REGIONAL # Set to regional because the api gateway will be behind a cloudfront distribution
  stage: dev
  tracing: # Enable X-Ray tracing (debugging)
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: Allow # X-Ray permissions
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"
    - Effect: "Allow"
      Action:
        - rds-data:ExecuteStatement
        - rds-data:BatchExecuteStatement
      Resource:
        - "Fn::Join":
            - ":"
            - - "arn:aws:rds-db"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "db:indexer-instance-1-eu-central-1c"
    - Effect: Allow # Lambda logs on cloudwatch
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - "Fn::Join":
            - ":"
            - - "arn:aws:logs"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "log-group:/aws/lambda/*:*:*"
  environment:
    PSQL_URL: ${env:PSQL_URL}

functions:
  address_transactions:
    handler: server/address.address_transactions
    events:
      - http:
          path: /{chain}/address/transactions
          method: get
  contract_address_logs:
    handler: server/contract.contract_address_logs
    events:
      - http:
          path: /{chain}/contract/logs/{contract_address}
          method: get
  block_closest_timestamp:
    handler: server/block.block_closest_timestamp
    events:
      - http:
          path: /{chain}/block/closest/{timestamp}
          method: get

resources:
  # CORS for api gateway errors
  - ${file(resources/api-gateway-errors.yml)}

plugins:
  - serverless-python-requirements
  - serverless-ignore
  - serverless-offline
